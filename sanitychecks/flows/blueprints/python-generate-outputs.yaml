id: python-generate-outputs
namespace: sanitychecks
variables:
  file: orders.csv
tasks:
  - id: analyze_orders
    type: io.kestra.plugin.scripts.python.Script
    warningOnStdErr: false
    beforeCommands:
      - pip install faker kestra > /dev/null
    outputFiles:
      - "*.csv"
    script: "import csv\nimport random\nimport time\nfrom faker import Faker\nfrom kestra import Kestra\n\nstart_time = time.time()\n\nfake = Faker()\n\n# list of columns for the CSV file\ncolumns = [\n    \"order_id\",\n    \"customer_name\",\n    \"customer_email\",\n    \"product_id\",\n    \"price\",\n    \"quantity\",\n    \"total\",\n]\n\nfilename = \"{{ vars.file }}\"\ntags = {'file': filename}\n\n# Generate 100 random orders\norders = []\nfor i in range(100):\n    order_id = i + 1\n    customer_name = fake.name()\n    customer_email = fake.email()\n    product_id = random.randint(1, 20)\n    price = round(random.uniform(10.0, 200.0), 2)\n    quantity = random.randint(1, 10)\n    total = round(price * quantity, 2)\n    orders.append(\n        [order_id, customer_name, customer_email, product_id, price, quantity, total]\n    )\n\n# Write the orders to a CSV file\nwith open(filename, \"w\", newline=\"\") as file:\n    writer = csv.writer(file)\n    writer.writerow(columns)\n    writer.writerows(orders)\n\n# Calculate and print the sum and average of the \"total\" column\ntotal_sum = sum(order[6] for order in orders)\naverage_order = round(total_sum / len(orders), 2)\nprint(f\"Total sum: {total_sum}\")\nprint(f\"Average Order value: {average_order}\")\n\nKestra.outputs({\"total_sum\": total_sum, \"average_order\": average_order})\nKestra.counter('total_sum', total_sum, tags)\nKestra.counter('average_order', average_order, tags)\n\nend_time = time.time()  \nprocessing_time = end_time - start_time\nKestra.timer('processing_time', processing_time, tags)\n\nprint(f\"The script execution took: {processing_time} seconds\")\n"
