id: dag
namespace: sanitycheck

tasks:
  - id: dag
    type: io.kestra.plugin.core.flow.Dag
    tasks:
      - task:
          id: task1
          type: io.kestra.plugin.core.debug.Return
          format: "1"
      - task:
          id: task2
          type: io.kestra.plugin.core.debug.Return
          format: "{{ outputs.task1.value}}"
        dependsOn:
          - task1
      - task:
          id: task3
          type: io.kestra.plugin.core.log.Log
          message: task 3
        dependsOn:
          - task1
      - task:
          id: task4
          type: io.kestra.plugin.core.debug.Return
          format: '{{ outputs.task1.value + outputs.task2.value }}'
        dependsOn:
          - task2
          - task1

  - id: assert
    type: io.kestra.plugin.core.execution.Assert
    conditions:
      - "{{ outputs.task2.value == '1' }}"
      - "{{ outputs.task4.value == '11' }}"

