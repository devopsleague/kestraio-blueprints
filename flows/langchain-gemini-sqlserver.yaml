id: customer_success_automation
namespace: blueprint
description: Retrieve a previous customer discussion from an SQL server, give it to Gemini LLM model to continue the conversation, send the answer via API and update the discussion in database

inputs:
  - id: user_id
    type: STRING

tasks:

  - id: retrieve_data
    type: io.kestra.plugin.jdbc.sqlserver.Query
    sql: SELECT type, content from customer.conversation WHERE user_id == "{{ inputs.user_id }}"
    fetchType: FETCH

  - id: chat_completion
    type: io.kestra.plugin.langchain4j.gemini.ChatCompletion
    apikey: "{{ secret('GEMINI_API_KEY') }}"
    modelName: GEMINI_1_5_FLASH
    chatMessagesInput: "{{outputs.retrieve_data.rows}}"

  - id: answer
    type: io.kestra.plugin.core.http.Request
    uri: "http://{{ secret('API_HOST') }}/api/v1/customer_message/{{inputs.user_id}}"
    method: POST
    formData:
      message: "{{ outputs.chat_completion.aiResponse}}"


  - id: save_answer
    type: io.kestra.plugin.jdbc.sqlserver.Query
    sql: INSERT INTO customer.conversation (type, content) VALUES ('AI', '{{ outputs.chat_completion.aiResponse}}')


pluginDefaults:
  - type: io.kestra.plugin.jdbc.sqlserver
    values:
      url: "jdbc:sqlserver://{{ secret('SQLSERVER_HOST')}}"
      username: "{{ secret('SQLSERVER_USERNAME')}}"
      password: "{{ secret('SQLSERVER_PASSWORD')}}"
